# Generated by Django 4.1.3 on 2025-07-24 01:18

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('AG', 'Agence Immobilière'), ('PR', 'Propriétaire')], max_length=2)),
                ('telephone', models.CharField(max_length=20)),
                ('addresse', models.TextField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'gestion_customuser',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Agence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('siret', models.CharField(max_length=14, unique=True)),
                ('date_creation', models.DateField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Chambre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=100)),
                ('superficie', models.DecimalField(decimal_places=2, max_digits=6)),
                ('prix_loyer', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('date_mise_en_location', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Locataire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('prenom', models.CharField(max_length=100)),
                ('telephone', models.CharField(max_length=20)),
                ('raison_sociale', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('caution', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date_inscription', models.DateField(auto_now_add=True)),
                ('agence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locataires', to='gestion.agence')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_entree', models.DateField()),
                ('date_sortie', models.DateField(blank=True, null=True)),
                ('chambre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='gestion.chambre')),
                ('locataire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='gestion.locataire')),
            ],
        ),
        migrations.CreateModel(
            name='MoyenPaiement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(choices=[('MOB', 'Mobile Money'), ('ESP', 'Espèces'), ('VIR', 'Virement Bancaire')], max_length=3, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TypeBien',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(choices=[('RES', 'Résidentiel'), ('COM', 'Commercial')], max_length=3, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Proprietaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_bien', models.PositiveIntegerField(default=0)),
                ('taux_commission', models.DecimalField(decimal_places=2, max_digits=5)),
                ('date_debut_contrat', models.DateField()),
                ('duree_contrat', models.PositiveIntegerField()),
                ('agence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proprietaires', to='gestion.agence')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Paiement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montant', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('date_paiement', models.DateField()),
                ('mois_couvert', models.CharField(max_length=20)),
                ('est_valide', models.BooleanField(default=False)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paiements', to='gestion.location')),
                ('moyen_paiement', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestion.moyenpaiement')),
            ],
        ),
        migrations.AddField(
            model_name='location',
            name='moyen_paiement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestion.moyenpaiement'),
        ),
        migrations.CreateModel(
            name='Immeuble',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('addresse', models.TextField()),
                ('superficie', models.DecimalField(decimal_places=2, max_digits=10)),
                ('nombre_chambres', models.PositiveIntegerField()),
                ('date_ajout', models.DateField(auto_now_add=True)),
                ('proprietaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='immeubles', to='gestion.proprietaire')),
                ('type_bien', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestion.typebien')),
            ],
        ),
        migrations.AddField(
            model_name='chambre',
            name='immeuble',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chambres', to='gestion.immeuble'),
        ),
        migrations.AddField(
            model_name='chambre',
            name='locataire',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chambres', to='gestion.locataire'),
        ),
        migrations.CreateModel(
            name='Bien',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(help_text='Ex: Appartement T3 - Centre-ville', max_length=200)),
                ('adresse', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('agence', models.ForeignKey(blank=True, limit_choices_to={'user_type': 'AG'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='biens_geres', to=settings.AUTH_USER_MODEL)),
                ('proprietaire', models.ForeignKey(limit_choices_to={'user_type': 'PR'}, on_delete=django.db.models.deletion.CASCADE, related_name='biens', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
